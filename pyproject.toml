[tool.poetry]
name = "charity-project"
version = "0.1.0"
description = ""
authors = ["Aleksandr Rol <rolaleksandr75@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.111.0"
uvicorn = {extras = ["standart"], version = "^0.30.1"}
pydantic-settings = "^2.3.4"
asyncpg = "^0.29.0"
sqlalchemy = {extras = ["asyncio"], version = "^2.0.31"}
black = "^24.4.2"
flake8 = "^7.1.0"
isort = "^5.13.2"
mypy = "^1.10.1"
alembic = "^1.13.2"
pytest = "^8.2.2"
pytest-asyncio = "^0.23.7"
aiosqlite = "^0.20.0"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.black]
extend-exclude = "alembic/*"
line-length = 79

[tool.flake8]
extend-exclude = [
    "tests/",
    "venv/",
    "env/"
]
ignore = [
    "ANN101",  # missing type annotation for self in method
    "ANN102",  # missing type annotation for cls in classmethod
    "D100",  # missing docstring in public module
    "D101",  # missing docstring in public class
    "D102",  # missing docstring in public method
    "D103",  # missing docstring in public function
    "D104",  # missing docstring in public package
    "D105",  # missing docstring in magic method
    "D106",  # missing docstring in public nested class
    "D107",  # missing docstring in __init__
    "W503",  # line break before binary operator
]
max-complexity = 10
max-line-length = 79
per-file-ignores = [
    "__init__.py:F401",  # %r imported but unused
    "db.py:N805",  # first argument of a method should be named 'self'
]

[tool.isort]
profile = "black"
line_length = 79
src_paths = "charity_project_app"
extend_skip = ["alembic"]

[tool.mypy]
python_version = "3.12"
check_untyped_defs = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
ignore_errors = false
ignore_missing_imports = true
implicit_reexport = false


[tool.pytest.ini_options]
pythonpath = [".", "charity_project_app"]
asyncio_mode = "auto"
norecursedirs = "env/*"
addopts = "-vv -p no:cacheprovider --disable-warnings"
testpaths = "tests/"
